{"version":3,"sources":["components/CarForm.js","components/create-carcomponent.js","components/edit-carcomponent.js","components/CarTableRow.js","components/car-listcomponent.js","App.js","reportWebVitals.js","index.js"],"names":["CarForm","props","validationSchema","Yup","shape","carbrand","required","cartype","carstatus","countryOfman","yearOfman","price","prevowners","console","log","react_default","a","createElement","className","formik_esm","Object","assign","FormGroup","name","type","component","Button","variant","size","block","children","CreateCar","_useState","useState","_useState2","slicedToArray","formValues","components_CarForm","initialValues","onSubmit","carObject","axios","post","then","res","status","alert","Promise","reject","catch","err","enableReinitialize","EditCar","email","setFormValues","useEffect","get","match","params","id","_res$data","data","put","history","push","CarTableRow","_props$obj","obj","_id","react_router_dom","to","onClick","delete","window","location","reload","CarList","cars","setCars","_ref","Table","striped","bordered","hover","map","i","components_CarTableRow","key","App","Navbar","bg","Container","Brand","Nav","Row","Col","md","react_router","exact","path","element","create_carcomponent","edit_carcomponent","car_listcomponent","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.8a411c03.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\r\n\r\n  \r\nconst CarForm = (props) => {\r\n  const validationSchema = Yup.object().shape({\r\n    carbrand: Yup.string().required(\"Required\"),\r\n    cartype: Yup.string().required(\"Required\"),\r\n    carstatus: Yup.string().required(\"Required\"),\r\n    countryOfman: Yup.string().required(\"Required\"),\r\n    yearOfman: Yup.date().required(\"Required\"),\r\n    price: Yup.number().required(\"Required\"),\r\n    prevowners: Yup.number().required(\"Required\"),\r\n  });\r\n  console.log(props);\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <Formik {...props} validationSchema={validationSchema}>\r\n        <Form>\r\n          <FormGroup>\r\n          Car Brand:\r\n            <Field name=\"carbrand\" type=\"text\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"carbrand\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />           \r\n          </FormGroup>\r\n          <FormGroup>\r\n          Car Type:\r\n            <Field name=\"cartype\" type=\"text\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"cartype\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />           \r\n          </FormGroup>\r\n          <FormGroup>\r\n          Status-New/Old:\r\n            <Field name=\"carstatus\" type=\"text\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"carstatus\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />           \r\n          </FormGroup>\r\n          <FormGroup>\r\n          Country of Manufacture:\r\n            <Field name=\"countryOfman\" type=\"text\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"countryOfman\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />           \r\n          </FormGroup>\r\n          <FormGroup>\r\n          Year of Manufacture:\r\n            <Field name=\"yearOfman\" type=\"number\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"yearOfman\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />           \r\n          </FormGroup>\r\n          <FormGroup>\r\n          Price:\r\n            <Field name=\"price\" type=\"number\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"price\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />           \r\n          </FormGroup>\r\n          <FormGroup>\r\n          No. of Previous Owners:\r\n            <Field name=\"prevowners\" type=\"number\" \r\n                className=\"form-control\" />\r\n            <ErrorMessage\r\n              name=\"prevowners\"\r\n              className=\"d-block invalid-feedback\"\r\n              component=\"span\"\r\n            />\r\n          </FormGroup>\r\n          <Button className=\"btn-look\" variant=\"danger\" size=\"md\" \r\n            block=\"block\" type=\"submit\">\r\n            {props.children}\r\n          </Button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default CarForm;","// Create car component to add new car\r\n\r\n// Import modules\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport CarForm from \"./CarForm\";\r\n\r\n// CreateCar Component\r\n\r\nconst CreateCar = () => {\r\n    // useState\r\n    const [formValues, setFormValues] = useState({\r\n        carbrand: \"\",\r\n        cartype: \"\",\r\n        carstatus: \"\",\r\n        countryOfman: \"\",\r\n        yearOfman: \"\",\r\n        price: \"\",\r\n        prevowners: \"\",\r\n    })\r\n\r\n    // onsubmit handler\r\n    const onSubmit = (carObject) => {\r\n        axios.post(\r\n            'http://localhost:4000/cars/create-car', carObject)\r\n            .then(res => {\r\n                if (res.status === 200)\r\n                alert('Car Created Successfully')\r\n                else\r\n                    Promise.reject()\r\n            })\r\n            .catch(err => alert('Error! Something Went Wrong !'))\r\n    }\r\n    // Return car form\r\n    return (\r\n        <CarForm initialValues ={formValues}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize>\r\n        Create Car\r\n\r\n        </CarForm>\r\n    )\r\n}\r\n// Export CreateCar Component\r\nexport default CreateCar;","// This section is for updating details\r\n// We have reusable carForm component\r\n// We will fetch car details to reinitilise form\r\n\r\n\r\n// Importing Required Modules\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport CarForm from \"./CarForm\";\r\n\r\n// Edit car Component\r\nconst EditCar = (props) => {\r\n    // Use state\r\n    const [formValues, setFormValues] = useState({\r\n        carbrand:\"\",\r\n        cartype:\"\",\r\n        email:\"\",\r\n        carstatus:\"\",\r\n        countryOfman:\"\",\r\n        yearOfman:\"\",\r\n        price:\"\",\r\n        prevowners:\"\",\r\n    });\r\n\r\n    // onSubmit handler\r\n    const onSubmit = (carObject) => {\r\n        axios.put('http://localhost:4000/cars/update-car/' +\r\n            props.match.params.id, carObject\r\n        )\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n                alert(\"Car Updated Successfully\");\r\n                props.history.push(\"/car-list\");\r\n            } else Promise.reject();\r\n        })\r\n        .catch((err) => alert(\"Error! Something Went Wrong\"));\r\n    };\r\n\r\n    // Load data from server and reinitialize car form\r\n    useEffect(() => {\r\n        axios.get('http://localhost:4000/cars/update-car/'\r\n            + props.match.params.id\r\n        )\r\n            .then((res) => {\r\n                const { carbrand, cartype, carstatus, countryOfman, yearOfman, price, prevowners } = res.data;\r\n                setFormValues({ carbrand, cartype, carstatus, countryOfman, yearOfman, price, prevowners });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);   // saves the update in updated list\r\n\r\n\r\n    // Return the car form upon updating\r\n    return (\r\n        <CarForm\r\n            initialValues={formValues}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize\r\n        >\r\n            Update Car\r\n        </CarForm>\r\n    );\r\n}\r\n\r\n// Export EditCar Component\r\nexport default EditCar;","// In this step, we are returnng table row which is responsible to display car data\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst CarTableRow = (props) => {\r\n    const { _id, carbrand, cartype, carstatus, countryOfman, yearOfman, price, prevowners } = props.obj;\r\n\r\n    const deleteCar = () => {\r\n        axios.delete('http://localhost:4000/cars/delete-car/' + _id).then((res) => {\r\n                if (res.status === 200) {\r\n                    alert(\"Car successfully deleted\");\r\n                    window.location.reload();\r\n                } else Promise.reject();\r\n            })\r\n            .catch((err) => alert(\"Something went terribly wrong\"));\r\n    };\r\n    return (\r\n        <tr>\r\n            <td>{carbrand}</td>\r\n            <td>{cartype}</td>\r\n            <td>{carstatus}</td>            \r\n            <td>{countryOfman}</td>\r\n            <td>{yearOfman}</td>\r\n            <td>{price}</td>\r\n            <td>{prevowners}</td>\r\n            <td>\r\n                <Link className=\"edit-link\"\r\n                    to={\"/edit-car/\" + _id}>\r\n                    Edit\r\n                </Link>\r\n                <Button onClick={deleteCar}\r\n                size='sm' variant=\"danger\">\r\n                Delete\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default CarTableRow;","// This step displays the student details in a table\r\n// We fetch student's data and iterate over it to create table row for every student\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport  CarTableRow from \"./CarTableRow\";\r\n\r\nconst CarList = () => {\r\n    // useState, the initial state was an empty array\r\n    const [cars, setCars] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get('http://localhost:4000/cars/car-list/')\r\n        .then(({ data }) => {\r\n            setCars(data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    const DataTable = () => {\r\n        return cars.map((res, i) => {\r\n            return <CarTableRow obj={res} key={i} />\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"table-wrapper\">\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Car Brand</th>\r\n                    <th>Car Type</th>\r\n                    <th>Status-New/Old</th>\r\n                    <th>Country Of Manufacture</th>\r\n                    <th>Year Of Manufacture</th>\r\n                    <th>Price</th>\r\n                    <th>Previous Owners</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{DataTable()}</tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarList;","// Editing to include the menu to make the routing to the app\n\n// React and Bootstrap\nimport React from \"react\";\nimport { Nav, Navbar, Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// Importing Custom CSS\nimport \"./App.css\"\n\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport CreateCar from \"./components/create-carcomponent\";\n\nimport EditCar from \"./components/edit-carcomponent\";\nimport CarList from \"./components/car-listcomponent\";\n\n\n// App Component\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand>\n                <Link to={\"/create-car\"}\n                  className=\"nav-link\"\n                >\n                  MERN Stack Car App\n                </Link>\n              </Navbar.Brand>\n\n              <Nav className=\"justify-content-end\" >\n                <Nav>\n                  <Link to={\"/create-car\"}\n                    className=\"nav-link\"\n                  >\n                    Add New Car\n                  </Link>\n                </Nav>\n                <Nav>\n                  <Link to={\"/car-list\"}\n                    className=\"nav-link\">\n                    Available Cars List\n                  </Link>\n                </Nav>\n              </Nav>\n            </Container>\n          </Navbar>\n        </header>\n\n        <Container>\n          <Row>\n            <Col md={12}>\n              <div className=\"wrapper\">\n                <Routes>\n                  <Route exact path=\"/cars\" element={<CreateCar />} />\n                  <Route path=\"/create-car\" element={<CreateCar />} />\n                  <Route path=\"/edit-car/:id\" element={<EditCar />} />\n                  <Route path=\"/car-list\" element={<CarList />} />\n                </Routes>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}